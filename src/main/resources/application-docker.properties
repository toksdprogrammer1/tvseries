
spring.datasource.driverClassName=${DRIVER_CLASS_NAME}
spring.datasource.url=${URL}
spring.datasource.username=${USERNAME}
spring.datasource.password=${PASSWORD}
spring.jpa.show-sql=${SHOW_SQL}
spring.jpa.properties.hibernate.format_sql=${FORMAT_SQL}

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=${DIALECT}

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=${DDL_AUTO}



#Binlist url
binlist-url=${BINLIST_URL}

#kafka
spring.cloud.stream.default-binder=${BINDER}
spring.cloud.stream.kafka.binder.brokers=${KAFKA_BROKER}

#publisher
spring.cloud.stream.bindings.publish_topic.destination=${TOPIC}
spring.cloud.stream.bindings.com_mintfintech_card_verified.producer.partitioned=${IS_PATITIONED}
spring.cloud.stream.bindings.com_mintfintech_card_verified.producer.partition-count=${PARTITION_COUNT}
spring.cloud.stream.bindings.com_mintfintech_card_verified.producer.partition-key-expression=${${PARTITION_KEY_COUNT}}

#consumer
spring.cloud.stream.bindings.consume_topic.destination=${TOPIC}
spring.cloud.stream.binder.kafka.start-offset=${OFFSET}
spring.cloud.stream.bindings.finch_fulfilment_dbo_inbox.group=${CONSUMER_GROUP}
spring.cloud.stream.bindings.finch_fulfilment_dbo_inbox.resetOffsets=${READ_OFFSET}
spring.cloud.stream.kafka.bindings.finch_fulfilment_dbo_inbox.consumer.autoCommitOffset=${AUTO_COMMIT}